QoF
===

QoF (Quality of Flow) is a YAF-derived flowmeter, designed for passive
measurement of per-flow performance characteristics. It forked as of YAF
version 2.3.2. It removes all payload inspection and packet handling features 
from YAF, and adds performance measurement and flow pseudonymization features.

YAF
===

YAF is Yet Another Flowmeter. It processes packet data from pcap(3) dumpfiles 
as generated by tcpdump(1) or via live capture from an interface using pcap(3),
an Endace DAG card, or a Napatech adapter into bidirectional flows, then 
exports those flows to IPFIX Collecting Processes or in an IPFIX-based file 
format. YAF's output can be used with the SiLK flow analysis tools.

The YAF toolchain presently consists of two primary tools, yaf itself, and
yafscii, which converts yaf output into ASCII format.

Building
========

YAF requires glib 2.4.7 or later; glib is available at 
http://www.gtk.org. Build and install glib before building YAF. Note that 
glib is also included in many operating environments or ports collections.

YAF requires libfixbuf version @YAF_REQ_FIXBUF_VER@ or later; libfixbuf is
available at http://tools.netsa.cert.org/fixbuf. Build and install libfixbuf
before building YAF.

YAF requires libpcap from http://www.tcpdump.org. Note that libpcap is included
with many operating environments or ports collections.

Endace DAG live input support requires libdag. Use the --with-dag option to
./configure to enable DAG support.

Napatech live input support requires libpcapexpress. libpcapexpress library is
available to Napatech customers for download at www.pcapexpress.com. Use the
--with-napatech option to ./configure to enable Napatech support. Before
starting YAF with --live napatech, reload Napatech drivers using pcapxctl -r
(Napatech Driver Load/Unload Script).

The YAF applications also require the included libyaf and libairframe
libraries. libyaf implements YAF file and network I/O, packet decoding,
fragment assembly, and flow generation. Libairframe includes utility functions.
These libraries are built and installed with the YAF tools distribution.

YAF uses a reasonably standard autotools-based build system. The customary
build procedure (./configure && make && make install) should work in most
environments. Note that YAF finds libfixbuf  using the
pkg-config(1) facility, so you may have to set the PKG_CONFIG_PATH variable 
on the configure command line if these libraries are installed in a 
nonstandard location, other than the prefix to which you are installing 
YAF itself.

Known Issues
============

YAF BPF Filtering does not operate with the Bivio Zero-Copy Library.

YAF BPF Filtering is ignored when using --live dag because libpcap is not
used.

YAF will not rotate output files if it is not seeing any flow data.  However,
it will continue to write process statistics messages at the configured
interval time to the most recent output file.

Presently, the destinationTransportPort information element contains
ICMP type and code information for ICMP or ICMP6 flows; this is nonstandard
and may not be interoperable with other IPFIX implementations.

Please send bug reports, feature requests, and questions to 
<netsa-help@cert.org>.