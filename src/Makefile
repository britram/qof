# Makefile.in generated by automake 1.13.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/qof
pkgincludedir = $(includedir)/qof
pkglibdir = $(libdir)/qof
pkglibexecdir = $(libexecdir)/qof
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin12.2.0
host_triplet = x86_64-apple-darwin12.2.0
target_triplet = x86_64-apple-darwin12.2.0
bin_PROGRAMS = yaf$(EXEEXT) yafscii$(EXEEXT) yafcollect$(EXEEXT)
#am__append_1 = yafhooks.c
#am__append_2 = yafcygwin.c
subdir = src
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(srcdir)/yaf.pod.in $(top_srcdir)/autoconf/depcomp \
	$(noinst_HEADERS)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltdl.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/autoconf/ax_check_ltdl.m4 \
	$(top_srcdir)/autoconf/ax_prog_doxygen.m4 \
	$(top_srcdir)/autoconf/ax_check_aligned_access_required.m4 \
	$(top_srcdir)/autoconf/spread.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/yaf/config.h \
	$(top_builddir)/airframe/include/airframe/config.h
CONFIG_CLEAN_FILES = yaf.pod
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(man1dir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libyaf_la_DEPENDENCIES =
am__libyaf_la_SOURCES_DIST = yafcore.c yaftab.c yafrag.c decode.c \
	picq.c ring.c qofrtt.c yafhooks.c yafcygwin.c
#am__objects_1 = libyaf_la-yafhooks.lo
#am__objects_2 = libyaf_la-yafcygwin.lo
am_libyaf_la_OBJECTS = libyaf_la-yafcore.lo libyaf_la-yaftab.lo \
	libyaf_la-yafrag.lo libyaf_la-decode.lo libyaf_la-picq.lo \
	libyaf_la-ring.lo libyaf_la-qofrtt.lo $(am__objects_1) \
	$(am__objects_2)
libyaf_la_OBJECTS = $(am_libyaf_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libyaf_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libyaf_la_CFLAGS) \
	$(CFLAGS) $(libyaf_la_LDFLAGS) $(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS)
am_yaf_OBJECTS = yaf-yaf.$(OBJEXT) yaf-yafstat.$(OBJEXT) \
	yaf-yafdag.$(OBJEXT) yaf-yafcap.$(OBJEXT) yaf-yafout.$(OBJEXT) \
	yaf-yaflush.$(OBJEXT) yaf-yafpcapx.$(OBJEXT) \
	yaf-qofctx.$(OBJEXT) yaf-qofifmap.$(OBJEXT)
yaf_OBJECTS = $(am_yaf_OBJECTS)
yaf_DEPENDENCIES = libyaf.la
yaf_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(yaf_CFLAGS) $(CFLAGS) \
	$(yaf_LDFLAGS) $(LDFLAGS) -o $@
am_yafcollect_OBJECTS = yafcollect-yafcollect.$(OBJEXT)
yafcollect_OBJECTS = $(am_yafcollect_OBJECTS)
yafcollect_DEPENDENCIES = libyaf.la
yafcollect_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(yafcollect_CFLAGS) \
	$(CFLAGS) $(yafcollect_LDFLAGS) $(LDFLAGS) -o $@
am_yafscii_OBJECTS = yafscii-yafscii.$(OBJEXT)
yafscii_OBJECTS = $(am_yafscii_OBJECTS)
yafscii_DEPENDENCIES = libyaf.la
yafscii_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(yafscii_CFLAGS) \
	$(CFLAGS) $(yafscii_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include/yaf -I$(top_builddir)/airframe/include/airframe
depcomp = $(SHELL) $(top_srcdir)/autoconf/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libyaf_la_SOURCES) $(yaf_SOURCES) $(yafcollect_SOURCES) \
	$(yafscii_SOURCES)
DIST_SOURCES = $(am__libyaf_la_SOURCES_DIST) $(yaf_SOURCES) \
	$(yafcollect_SOURCES) $(yafscii_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(man1_MANS)
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.13
AIRFRAME_POD2MAN_ARGS = --center='airframe' --release='0.9.0' --date=' 3-Mar-2013'
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.13
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = -I$(top_builddir)/include -I$(top_srcdir)/include -I$(top_builddir)/airframe/include -I$(top_srcdir)/airframe/include -Wall -Wno-comment -Wno-long-long
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOXYGEN_PAPER_SIZE = 
DSYMUTIL = dsymutil
DUMPBIN = 
DX_CONFIG = Doxyfile
DX_DOCDIR = doc
DX_DOT = /opt/local/bin/dot
DX_DOXYGEN = /opt/local/bin/doxygen
DX_DVIPS = 
DX_EGREP = 
DX_ENV =  SRCDIR='.' PROJECT='qof' DOCDIR='doc' VERSION='0.9.0' PERL_PATH='/opt/local/bin/perl' HAVE_DOT='YES' DOT_PATH='/opt/local/bin' GENERATE_MAN='NO' GENERATE_RTF='NO' GENERATE_XML='NO' GENERATE_HTMLHELP='NO' GENERATE_CHI='NO' GENERATE_HTML='YES' GENERATE_LATEX='NO'
DX_FLAG_chi = 0
DX_FLAG_chm = 0
DX_FLAG_doc = 1
DX_FLAG_dot = 1
DX_FLAG_html = 1
DX_FLAG_man = 0
DX_FLAG_pdf = 0
DX_FLAG_ps = 0
DX_FLAG_rtf = 0
DX_FLAG_xml = 0
DX_HHC = 
DX_LATEX = 
DX_MAKEINDEX = 
DX_PDFLATEX = 
DX_PERL = /opt/local/bin/perl
DX_PROJECT = qof
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
FIXBUF_REQ_LIBSPREAD = 
GLIB_CFLAGS = -I/opt/local/include/glib-2.0 -I/opt/local/lib/glib-2.0/include -I/opt/local/include  
GLIB_COMPILE_RESOURCES = glib-compile-resources
GLIB_GENMARSHAL = glib-genmarshal
GLIB_LDADD = 
GLIB_LIBS = -L/opt/local/lib -lglib-2.0 -lintl  
GLIB_MKENUMS = glib-mkenums
GOBJECT_QUERY = gobject-query
GREP = /usr/bin/grep
INCLTDL = -I${top_srcdir}/libltdl
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/llvm-gcc-4.2/libexec/gcc/i686-apple-darwin11/4.2.1/ld
LDFLAGS = 
LIBCOMPAT = 4:0:0
LIBLTDL = ${top_build_prefix}libltdl/libltdlc.la
LIBOBJS = 
LIBS = -lpcap  $(LIBLTDL)
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTDLDEPS = ${top_build_prefix}libltdl/libltdlc.la
LTDLINCL = -I${top_srcdir}/libltdl
LTLIBOBJS = 
MAKEINFO = makeinfo
MANIFEST_TOOL = :
MKDIR_P = ../autoconf/install-sh -c -d
NM = /usr/bin/nm
NMEDIT = nmedit
OBJDUMP = false
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = qof
PACKAGE_BUGREPORT = brian@trammell.ch
PACKAGE_NAME = qof
PACKAGE_STRING = qof 0.9.0
PACKAGE_TARNAME = qof
PACKAGE_URL = 
PACKAGE_VERSION = 0.9.0
PATH_SEPARATOR = :
PKG_CONFIG = /opt/local/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /opt/local/lib/pkgconfig/:/Users/brian/opt/lib/pkgconfig
POD2HTML = pod2html
POD2MAN = pod2man
RANLIB = ranlib
RPM_CONFIG_FLAGS = 
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SPREAD_CC_DEFINE = 
SPREAD_CFLAGS = 
SPREAD_LDFLAGS = 
SPREAD_LIBS = 
STRIP = strip
VERSION = 0.9.0
YAF_HAS_DAG = 
YAF_HAS_NAPATECH = 
YAF_POD2MAN_ARGS = --center='QoF' --release='0.9.0' --date=' 3-Mar-2013'
YAF_REQ_AIRFRAME_VER = 2.0.0
YAF_REQ_FIXBUF_VER = 1.0.0
YAF_REQ_GLIB_VER = 2.6.4
YAF_REQ_PLUG_CONF = 
abs_builddir = /Users/brian/work/qof/src
abs_srcdir = /Users/brian/work/qof/src
abs_top_builddir = /Users/brian/work/qof
abs_top_srcdir = /Users/brian/work/qof
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin12.2.0
build_alias = 
build_cpu = x86_64
build_os = darwin12.2.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin12.2.0
host_alias = 
host_cpu = x86_64
host_os = darwin12.2.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/brian/work/qof/autoconf/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libfixbuf_CFLAGS = -I/opt/local/include/glib-2.0 -I/opt/local/lib/glib-2.0/include -I/opt/local/include -I/Users/brian/opt/include  
libfixbuf_LIBS = -L/opt/local/lib -L/Users/brian/opt/lib -lfixbuf -lgthread-2.0 -lglib-2.0 -lintl  
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /Users/brian/opt
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  libltdl
sysconfdir = ${prefix}/etc
target = x86_64-apple-darwin12.2.0
target_alias = 
target_cpu = x86_64
target_os = darwin12.2.0
target_vendor = apple
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
version_info = 1:1:0
yaml_CFLAGS =  
yaml_LIBS = -L/opt/local/lib -lyaml  
PODFILES = yaf.pod yafscii.pod
man1_MANS = yaf.1 yafscii.1
HTMLFILES = yaf.html yafscii.html
WARN_CFLAGS = -g -DDEBUG -Wall -W -Wmissing-prototypes -Wformat=2 -Wdeclaration-after-statement -Wpointer-arith -Wshadow
CLEANFILES = $(man1_MANS) $(HTMLFILES)
EXTRA_DIST = $(PODFILES)
lib_LTLIBRARIES = libyaf.la
INCLUDES = $(LTDLINCL)
libyaf_la_SOURCES = yafcore.c yaftab.c yafrag.c decode.c picq.c ring.c \
	qofrtt.c $(am__append_1) $(am__append_2)
libyaf_la_LIBADD =  
libyaf_la_LDFLAGS = -L/opt/local/lib -lglib-2.0 -lintl   -L/opt/local/lib -L/Users/brian/opt/lib -lfixbuf -lgthread-2.0 -lglib-2.0 -lintl   -version-info 4:0:0 -release ${VERSION}
libyaf_la_CFLAGS = -I/opt/local/include/glib-2.0 -I/opt/local/lib/glib-2.0/include -I/opt/local/include   -I/opt/local/include/glib-2.0 -I/opt/local/lib/glib-2.0/include -I/opt/local/include -I/Users/brian/opt/include   -DYAF_CONF_DIR='"$(sysconfdir)"'
yaf_SOURCES = yaf.c yafstat.c yafdag.c yafcap.c yafout.c yaflush.c yafpcapx.c qofctx.c qofifmap.c
yaf_LDADD = libyaf.la 
yaf_LDFLAGS = -L../airframe/src -lairframe -L/opt/local/lib -lglib-2.0 -lintl   -L/opt/local/lib -L/Users/brian/opt/lib -lfixbuf -lgthread-2.0 -lglib-2.0 -lintl   -L/opt/local/lib -lyaml   -export-dynamic
yaf_CFLAGS = -I/opt/local/include/glib-2.0 -I/opt/local/lib/glib-2.0/include -I/opt/local/include   -I/opt/local/include/glib-2.0 -I/opt/local/lib/glib-2.0/include -I/opt/local/include -I/Users/brian/opt/include     -DYAF_CONF_DIR='"$(sysconfdir)"'
yafscii_SOURCES = yafscii.c
yafscii_LDADD = libyaf.la  
yafscii_LDFLAGS = -L../airframe/src -lairframe -L/opt/local/lib -lglib-2.0 -lintl   -L/opt/local/lib -L/Users/brian/opt/lib -lfixbuf -lgthread-2.0 -lglib-2.0 -lintl  
yafscii_CFLAGS = -I/opt/local/include/glib-2.0 -I/opt/local/lib/glib-2.0/include -I/opt/local/include   -I/opt/local/include/glib-2.0 -I/opt/local/lib/glib-2.0/include -I/opt/local/include -I/Users/brian/opt/include   
yafcollect_SOURCES = yafcollect.c
yafcollect_LDADD = libyaf.la 
yafcollect_LDFLAGS = -L../airframe/src -lairframe -L/opt/local/lib -lglib-2.0 -lintl   -L/opt/local/lib -L/Users/brian/opt/lib -lfixbuf -lgthread-2.0 -lglib-2.0 -lintl  
yafcollect_CFLAGS = -I/opt/local/include/glib-2.0 -I/opt/local/lib/glib-2.0/include -I/opt/local/include   -I/opt/local/include/glib-2.0 -I/opt/local/lib/glib-2.0/include -I/opt/local/include -I/Users/brian/opt/include  
noinst_HEADERS = yafdag.h yafcap.h yafpcapx.h yafstat.h yafout.h yaflush.h qofctx.h qofrtt.h qofifmap.h
all: all-am

.SUFFIXES:
.SUFFIXES: .1 .c .html .lo .o .obj .pod
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
yaf.pod: $(top_builddir)/config.status $(srcdir)/yaf.pod.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
libyaf.la: $(libyaf_la_OBJECTS) $(libyaf_la_DEPENDENCIES) $(EXTRA_libyaf_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libyaf_la_LINK) -rpath $(libdir) $(libyaf_la_OBJECTS) $(libyaf_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
yaf$(EXEEXT): $(yaf_OBJECTS) $(yaf_DEPENDENCIES) $(EXTRA_yaf_DEPENDENCIES) 
	@rm -f yaf$(EXEEXT)
	$(AM_V_CCLD)$(yaf_LINK) $(yaf_OBJECTS) $(yaf_LDADD) $(LIBS)
yafcollect$(EXEEXT): $(yafcollect_OBJECTS) $(yafcollect_DEPENDENCIES) $(EXTRA_yafcollect_DEPENDENCIES) 
	@rm -f yafcollect$(EXEEXT)
	$(AM_V_CCLD)$(yafcollect_LINK) $(yafcollect_OBJECTS) $(yafcollect_LDADD) $(LIBS)
yafscii$(EXEEXT): $(yafscii_OBJECTS) $(yafscii_DEPENDENCIES) $(EXTRA_yafscii_DEPENDENCIES) 
	@rm -f yafscii$(EXEEXT)
	$(AM_V_CCLD)$(yafscii_LINK) $(yafscii_OBJECTS) $(yafscii_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libyaf_la-decode.Plo
include ./$(DEPDIR)/libyaf_la-picq.Plo
include ./$(DEPDIR)/libyaf_la-qofrtt.Plo
include ./$(DEPDIR)/libyaf_la-ring.Plo
include ./$(DEPDIR)/libyaf_la-yafcore.Plo
include ./$(DEPDIR)/libyaf_la-yafcygwin.Plo
include ./$(DEPDIR)/libyaf_la-yafhooks.Plo
include ./$(DEPDIR)/libyaf_la-yafrag.Plo
include ./$(DEPDIR)/libyaf_la-yaftab.Plo
include ./$(DEPDIR)/yaf-qofctx.Po
include ./$(DEPDIR)/yaf-qofifmap.Po
include ./$(DEPDIR)/yaf-yaf.Po
include ./$(DEPDIR)/yaf-yafcap.Po
include ./$(DEPDIR)/yaf-yafdag.Po
include ./$(DEPDIR)/yaf-yaflush.Po
include ./$(DEPDIR)/yaf-yafout.Po
include ./$(DEPDIR)/yaf-yafpcapx.Po
include ./$(DEPDIR)/yaf-yafstat.Po
include ./$(DEPDIR)/yafcollect-yafcollect.Po
include ./$(DEPDIR)/yafscii-yafscii.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libyaf_la-yafcore.lo: yafcore.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libyaf_la_CFLAGS) $(CFLAGS) -MT libyaf_la-yafcore.lo -MD -MP -MF $(DEPDIR)/libyaf_la-yafcore.Tpo -c -o libyaf_la-yafcore.lo `test -f 'yafcore.c' || echo '$(srcdir)/'`yafcore.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libyaf_la-yafcore.Tpo $(DEPDIR)/libyaf_la-yafcore.Plo
#	$(AM_V_CC)source='yafcore.c' object='libyaf_la-yafcore.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libyaf_la_CFLAGS) $(CFLAGS) -c -o libyaf_la-yafcore.lo `test -f 'yafcore.c' || echo '$(srcdir)/'`yafcore.c

libyaf_la-yaftab.lo: yaftab.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libyaf_la_CFLAGS) $(CFLAGS) -MT libyaf_la-yaftab.lo -MD -MP -MF $(DEPDIR)/libyaf_la-yaftab.Tpo -c -o libyaf_la-yaftab.lo `test -f 'yaftab.c' || echo '$(srcdir)/'`yaftab.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libyaf_la-yaftab.Tpo $(DEPDIR)/libyaf_la-yaftab.Plo
#	$(AM_V_CC)source='yaftab.c' object='libyaf_la-yaftab.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libyaf_la_CFLAGS) $(CFLAGS) -c -o libyaf_la-yaftab.lo `test -f 'yaftab.c' || echo '$(srcdir)/'`yaftab.c

libyaf_la-yafrag.lo: yafrag.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libyaf_la_CFLAGS) $(CFLAGS) -MT libyaf_la-yafrag.lo -MD -MP -MF $(DEPDIR)/libyaf_la-yafrag.Tpo -c -o libyaf_la-yafrag.lo `test -f 'yafrag.c' || echo '$(srcdir)/'`yafrag.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libyaf_la-yafrag.Tpo $(DEPDIR)/libyaf_la-yafrag.Plo
#	$(AM_V_CC)source='yafrag.c' object='libyaf_la-yafrag.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libyaf_la_CFLAGS) $(CFLAGS) -c -o libyaf_la-yafrag.lo `test -f 'yafrag.c' || echo '$(srcdir)/'`yafrag.c

libyaf_la-decode.lo: decode.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libyaf_la_CFLAGS) $(CFLAGS) -MT libyaf_la-decode.lo -MD -MP -MF $(DEPDIR)/libyaf_la-decode.Tpo -c -o libyaf_la-decode.lo `test -f 'decode.c' || echo '$(srcdir)/'`decode.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libyaf_la-decode.Tpo $(DEPDIR)/libyaf_la-decode.Plo
#	$(AM_V_CC)source='decode.c' object='libyaf_la-decode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libyaf_la_CFLAGS) $(CFLAGS) -c -o libyaf_la-decode.lo `test -f 'decode.c' || echo '$(srcdir)/'`decode.c

libyaf_la-picq.lo: picq.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libyaf_la_CFLAGS) $(CFLAGS) -MT libyaf_la-picq.lo -MD -MP -MF $(DEPDIR)/libyaf_la-picq.Tpo -c -o libyaf_la-picq.lo `test -f 'picq.c' || echo '$(srcdir)/'`picq.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libyaf_la-picq.Tpo $(DEPDIR)/libyaf_la-picq.Plo
#	$(AM_V_CC)source='picq.c' object='libyaf_la-picq.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libyaf_la_CFLAGS) $(CFLAGS) -c -o libyaf_la-picq.lo `test -f 'picq.c' || echo '$(srcdir)/'`picq.c

libyaf_la-ring.lo: ring.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libyaf_la_CFLAGS) $(CFLAGS) -MT libyaf_la-ring.lo -MD -MP -MF $(DEPDIR)/libyaf_la-ring.Tpo -c -o libyaf_la-ring.lo `test -f 'ring.c' || echo '$(srcdir)/'`ring.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libyaf_la-ring.Tpo $(DEPDIR)/libyaf_la-ring.Plo
#	$(AM_V_CC)source='ring.c' object='libyaf_la-ring.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libyaf_la_CFLAGS) $(CFLAGS) -c -o libyaf_la-ring.lo `test -f 'ring.c' || echo '$(srcdir)/'`ring.c

libyaf_la-qofrtt.lo: qofrtt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libyaf_la_CFLAGS) $(CFLAGS) -MT libyaf_la-qofrtt.lo -MD -MP -MF $(DEPDIR)/libyaf_la-qofrtt.Tpo -c -o libyaf_la-qofrtt.lo `test -f 'qofrtt.c' || echo '$(srcdir)/'`qofrtt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libyaf_la-qofrtt.Tpo $(DEPDIR)/libyaf_la-qofrtt.Plo
#	$(AM_V_CC)source='qofrtt.c' object='libyaf_la-qofrtt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libyaf_la_CFLAGS) $(CFLAGS) -c -o libyaf_la-qofrtt.lo `test -f 'qofrtt.c' || echo '$(srcdir)/'`qofrtt.c

libyaf_la-yafhooks.lo: yafhooks.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libyaf_la_CFLAGS) $(CFLAGS) -MT libyaf_la-yafhooks.lo -MD -MP -MF $(DEPDIR)/libyaf_la-yafhooks.Tpo -c -o libyaf_la-yafhooks.lo `test -f 'yafhooks.c' || echo '$(srcdir)/'`yafhooks.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libyaf_la-yafhooks.Tpo $(DEPDIR)/libyaf_la-yafhooks.Plo
#	$(AM_V_CC)source='yafhooks.c' object='libyaf_la-yafhooks.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libyaf_la_CFLAGS) $(CFLAGS) -c -o libyaf_la-yafhooks.lo `test -f 'yafhooks.c' || echo '$(srcdir)/'`yafhooks.c

libyaf_la-yafcygwin.lo: yafcygwin.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libyaf_la_CFLAGS) $(CFLAGS) -MT libyaf_la-yafcygwin.lo -MD -MP -MF $(DEPDIR)/libyaf_la-yafcygwin.Tpo -c -o libyaf_la-yafcygwin.lo `test -f 'yafcygwin.c' || echo '$(srcdir)/'`yafcygwin.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libyaf_la-yafcygwin.Tpo $(DEPDIR)/libyaf_la-yafcygwin.Plo
#	$(AM_V_CC)source='yafcygwin.c' object='libyaf_la-yafcygwin.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libyaf_la_CFLAGS) $(CFLAGS) -c -o libyaf_la-yafcygwin.lo `test -f 'yafcygwin.c' || echo '$(srcdir)/'`yafcygwin.c

yaf-yaf.o: yaf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -MT yaf-yaf.o -MD -MP -MF $(DEPDIR)/yaf-yaf.Tpo -c -o yaf-yaf.o `test -f 'yaf.c' || echo '$(srcdir)/'`yaf.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/yaf-yaf.Tpo $(DEPDIR)/yaf-yaf.Po
#	$(AM_V_CC)source='yaf.c' object='yaf-yaf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -c -o yaf-yaf.o `test -f 'yaf.c' || echo '$(srcdir)/'`yaf.c

yaf-yaf.obj: yaf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -MT yaf-yaf.obj -MD -MP -MF $(DEPDIR)/yaf-yaf.Tpo -c -o yaf-yaf.obj `if test -f 'yaf.c'; then $(CYGPATH_W) 'yaf.c'; else $(CYGPATH_W) '$(srcdir)/yaf.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/yaf-yaf.Tpo $(DEPDIR)/yaf-yaf.Po
#	$(AM_V_CC)source='yaf.c' object='yaf-yaf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -c -o yaf-yaf.obj `if test -f 'yaf.c'; then $(CYGPATH_W) 'yaf.c'; else $(CYGPATH_W) '$(srcdir)/yaf.c'; fi`

yaf-yafstat.o: yafstat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -MT yaf-yafstat.o -MD -MP -MF $(DEPDIR)/yaf-yafstat.Tpo -c -o yaf-yafstat.o `test -f 'yafstat.c' || echo '$(srcdir)/'`yafstat.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/yaf-yafstat.Tpo $(DEPDIR)/yaf-yafstat.Po
#	$(AM_V_CC)source='yafstat.c' object='yaf-yafstat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -c -o yaf-yafstat.o `test -f 'yafstat.c' || echo '$(srcdir)/'`yafstat.c

yaf-yafstat.obj: yafstat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -MT yaf-yafstat.obj -MD -MP -MF $(DEPDIR)/yaf-yafstat.Tpo -c -o yaf-yafstat.obj `if test -f 'yafstat.c'; then $(CYGPATH_W) 'yafstat.c'; else $(CYGPATH_W) '$(srcdir)/yafstat.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/yaf-yafstat.Tpo $(DEPDIR)/yaf-yafstat.Po
#	$(AM_V_CC)source='yafstat.c' object='yaf-yafstat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -c -o yaf-yafstat.obj `if test -f 'yafstat.c'; then $(CYGPATH_W) 'yafstat.c'; else $(CYGPATH_W) '$(srcdir)/yafstat.c'; fi`

yaf-yafdag.o: yafdag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -MT yaf-yafdag.o -MD -MP -MF $(DEPDIR)/yaf-yafdag.Tpo -c -o yaf-yafdag.o `test -f 'yafdag.c' || echo '$(srcdir)/'`yafdag.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/yaf-yafdag.Tpo $(DEPDIR)/yaf-yafdag.Po
#	$(AM_V_CC)source='yafdag.c' object='yaf-yafdag.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -c -o yaf-yafdag.o `test -f 'yafdag.c' || echo '$(srcdir)/'`yafdag.c

yaf-yafdag.obj: yafdag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -MT yaf-yafdag.obj -MD -MP -MF $(DEPDIR)/yaf-yafdag.Tpo -c -o yaf-yafdag.obj `if test -f 'yafdag.c'; then $(CYGPATH_W) 'yafdag.c'; else $(CYGPATH_W) '$(srcdir)/yafdag.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/yaf-yafdag.Tpo $(DEPDIR)/yaf-yafdag.Po
#	$(AM_V_CC)source='yafdag.c' object='yaf-yafdag.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -c -o yaf-yafdag.obj `if test -f 'yafdag.c'; then $(CYGPATH_W) 'yafdag.c'; else $(CYGPATH_W) '$(srcdir)/yafdag.c'; fi`

yaf-yafcap.o: yafcap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -MT yaf-yafcap.o -MD -MP -MF $(DEPDIR)/yaf-yafcap.Tpo -c -o yaf-yafcap.o `test -f 'yafcap.c' || echo '$(srcdir)/'`yafcap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/yaf-yafcap.Tpo $(DEPDIR)/yaf-yafcap.Po
#	$(AM_V_CC)source='yafcap.c' object='yaf-yafcap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -c -o yaf-yafcap.o `test -f 'yafcap.c' || echo '$(srcdir)/'`yafcap.c

yaf-yafcap.obj: yafcap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -MT yaf-yafcap.obj -MD -MP -MF $(DEPDIR)/yaf-yafcap.Tpo -c -o yaf-yafcap.obj `if test -f 'yafcap.c'; then $(CYGPATH_W) 'yafcap.c'; else $(CYGPATH_W) '$(srcdir)/yafcap.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/yaf-yafcap.Tpo $(DEPDIR)/yaf-yafcap.Po
#	$(AM_V_CC)source='yafcap.c' object='yaf-yafcap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -c -o yaf-yafcap.obj `if test -f 'yafcap.c'; then $(CYGPATH_W) 'yafcap.c'; else $(CYGPATH_W) '$(srcdir)/yafcap.c'; fi`

yaf-yafout.o: yafout.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -MT yaf-yafout.o -MD -MP -MF $(DEPDIR)/yaf-yafout.Tpo -c -o yaf-yafout.o `test -f 'yafout.c' || echo '$(srcdir)/'`yafout.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/yaf-yafout.Tpo $(DEPDIR)/yaf-yafout.Po
#	$(AM_V_CC)source='yafout.c' object='yaf-yafout.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -c -o yaf-yafout.o `test -f 'yafout.c' || echo '$(srcdir)/'`yafout.c

yaf-yafout.obj: yafout.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -MT yaf-yafout.obj -MD -MP -MF $(DEPDIR)/yaf-yafout.Tpo -c -o yaf-yafout.obj `if test -f 'yafout.c'; then $(CYGPATH_W) 'yafout.c'; else $(CYGPATH_W) '$(srcdir)/yafout.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/yaf-yafout.Tpo $(DEPDIR)/yaf-yafout.Po
#	$(AM_V_CC)source='yafout.c' object='yaf-yafout.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -c -o yaf-yafout.obj `if test -f 'yafout.c'; then $(CYGPATH_W) 'yafout.c'; else $(CYGPATH_W) '$(srcdir)/yafout.c'; fi`

yaf-yaflush.o: yaflush.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -MT yaf-yaflush.o -MD -MP -MF $(DEPDIR)/yaf-yaflush.Tpo -c -o yaf-yaflush.o `test -f 'yaflush.c' || echo '$(srcdir)/'`yaflush.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/yaf-yaflush.Tpo $(DEPDIR)/yaf-yaflush.Po
#	$(AM_V_CC)source='yaflush.c' object='yaf-yaflush.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -c -o yaf-yaflush.o `test -f 'yaflush.c' || echo '$(srcdir)/'`yaflush.c

yaf-yaflush.obj: yaflush.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -MT yaf-yaflush.obj -MD -MP -MF $(DEPDIR)/yaf-yaflush.Tpo -c -o yaf-yaflush.obj `if test -f 'yaflush.c'; then $(CYGPATH_W) 'yaflush.c'; else $(CYGPATH_W) '$(srcdir)/yaflush.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/yaf-yaflush.Tpo $(DEPDIR)/yaf-yaflush.Po
#	$(AM_V_CC)source='yaflush.c' object='yaf-yaflush.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -c -o yaf-yaflush.obj `if test -f 'yaflush.c'; then $(CYGPATH_W) 'yaflush.c'; else $(CYGPATH_W) '$(srcdir)/yaflush.c'; fi`

yaf-yafpcapx.o: yafpcapx.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -MT yaf-yafpcapx.o -MD -MP -MF $(DEPDIR)/yaf-yafpcapx.Tpo -c -o yaf-yafpcapx.o `test -f 'yafpcapx.c' || echo '$(srcdir)/'`yafpcapx.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/yaf-yafpcapx.Tpo $(DEPDIR)/yaf-yafpcapx.Po
#	$(AM_V_CC)source='yafpcapx.c' object='yaf-yafpcapx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -c -o yaf-yafpcapx.o `test -f 'yafpcapx.c' || echo '$(srcdir)/'`yafpcapx.c

yaf-yafpcapx.obj: yafpcapx.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -MT yaf-yafpcapx.obj -MD -MP -MF $(DEPDIR)/yaf-yafpcapx.Tpo -c -o yaf-yafpcapx.obj `if test -f 'yafpcapx.c'; then $(CYGPATH_W) 'yafpcapx.c'; else $(CYGPATH_W) '$(srcdir)/yafpcapx.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/yaf-yafpcapx.Tpo $(DEPDIR)/yaf-yafpcapx.Po
#	$(AM_V_CC)source='yafpcapx.c' object='yaf-yafpcapx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -c -o yaf-yafpcapx.obj `if test -f 'yafpcapx.c'; then $(CYGPATH_W) 'yafpcapx.c'; else $(CYGPATH_W) '$(srcdir)/yafpcapx.c'; fi`

yaf-qofctx.o: qofctx.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -MT yaf-qofctx.o -MD -MP -MF $(DEPDIR)/yaf-qofctx.Tpo -c -o yaf-qofctx.o `test -f 'qofctx.c' || echo '$(srcdir)/'`qofctx.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/yaf-qofctx.Tpo $(DEPDIR)/yaf-qofctx.Po
#	$(AM_V_CC)source='qofctx.c' object='yaf-qofctx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -c -o yaf-qofctx.o `test -f 'qofctx.c' || echo '$(srcdir)/'`qofctx.c

yaf-qofctx.obj: qofctx.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -MT yaf-qofctx.obj -MD -MP -MF $(DEPDIR)/yaf-qofctx.Tpo -c -o yaf-qofctx.obj `if test -f 'qofctx.c'; then $(CYGPATH_W) 'qofctx.c'; else $(CYGPATH_W) '$(srcdir)/qofctx.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/yaf-qofctx.Tpo $(DEPDIR)/yaf-qofctx.Po
#	$(AM_V_CC)source='qofctx.c' object='yaf-qofctx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -c -o yaf-qofctx.obj `if test -f 'qofctx.c'; then $(CYGPATH_W) 'qofctx.c'; else $(CYGPATH_W) '$(srcdir)/qofctx.c'; fi`

yaf-qofifmap.o: qofifmap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -MT yaf-qofifmap.o -MD -MP -MF $(DEPDIR)/yaf-qofifmap.Tpo -c -o yaf-qofifmap.o `test -f 'qofifmap.c' || echo '$(srcdir)/'`qofifmap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/yaf-qofifmap.Tpo $(DEPDIR)/yaf-qofifmap.Po
#	$(AM_V_CC)source='qofifmap.c' object='yaf-qofifmap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -c -o yaf-qofifmap.o `test -f 'qofifmap.c' || echo '$(srcdir)/'`qofifmap.c

yaf-qofifmap.obj: qofifmap.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -MT yaf-qofifmap.obj -MD -MP -MF $(DEPDIR)/yaf-qofifmap.Tpo -c -o yaf-qofifmap.obj `if test -f 'qofifmap.c'; then $(CYGPATH_W) 'qofifmap.c'; else $(CYGPATH_W) '$(srcdir)/qofifmap.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/yaf-qofifmap.Tpo $(DEPDIR)/yaf-qofifmap.Po
#	$(AM_V_CC)source='qofifmap.c' object='yaf-qofifmap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yaf_CFLAGS) $(CFLAGS) -c -o yaf-qofifmap.obj `if test -f 'qofifmap.c'; then $(CYGPATH_W) 'qofifmap.c'; else $(CYGPATH_W) '$(srcdir)/qofifmap.c'; fi`

yafcollect-yafcollect.o: yafcollect.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yafcollect_CFLAGS) $(CFLAGS) -MT yafcollect-yafcollect.o -MD -MP -MF $(DEPDIR)/yafcollect-yafcollect.Tpo -c -o yafcollect-yafcollect.o `test -f 'yafcollect.c' || echo '$(srcdir)/'`yafcollect.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/yafcollect-yafcollect.Tpo $(DEPDIR)/yafcollect-yafcollect.Po
#	$(AM_V_CC)source='yafcollect.c' object='yafcollect-yafcollect.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yafcollect_CFLAGS) $(CFLAGS) -c -o yafcollect-yafcollect.o `test -f 'yafcollect.c' || echo '$(srcdir)/'`yafcollect.c

yafcollect-yafcollect.obj: yafcollect.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yafcollect_CFLAGS) $(CFLAGS) -MT yafcollect-yafcollect.obj -MD -MP -MF $(DEPDIR)/yafcollect-yafcollect.Tpo -c -o yafcollect-yafcollect.obj `if test -f 'yafcollect.c'; then $(CYGPATH_W) 'yafcollect.c'; else $(CYGPATH_W) '$(srcdir)/yafcollect.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/yafcollect-yafcollect.Tpo $(DEPDIR)/yafcollect-yafcollect.Po
#	$(AM_V_CC)source='yafcollect.c' object='yafcollect-yafcollect.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yafcollect_CFLAGS) $(CFLAGS) -c -o yafcollect-yafcollect.obj `if test -f 'yafcollect.c'; then $(CYGPATH_W) 'yafcollect.c'; else $(CYGPATH_W) '$(srcdir)/yafcollect.c'; fi`

yafscii-yafscii.o: yafscii.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yafscii_CFLAGS) $(CFLAGS) -MT yafscii-yafscii.o -MD -MP -MF $(DEPDIR)/yafscii-yafscii.Tpo -c -o yafscii-yafscii.o `test -f 'yafscii.c' || echo '$(srcdir)/'`yafscii.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/yafscii-yafscii.Tpo $(DEPDIR)/yafscii-yafscii.Po
#	$(AM_V_CC)source='yafscii.c' object='yafscii-yafscii.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yafscii_CFLAGS) $(CFLAGS) -c -o yafscii-yafscii.o `test -f 'yafscii.c' || echo '$(srcdir)/'`yafscii.c

yafscii-yafscii.obj: yafscii.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yafscii_CFLAGS) $(CFLAGS) -MT yafscii-yafscii.obj -MD -MP -MF $(DEPDIR)/yafscii-yafscii.Tpo -c -o yafscii-yafscii.obj `if test -f 'yafscii.c'; then $(CYGPATH_W) 'yafscii.c'; else $(CYGPATH_W) '$(srcdir)/yafscii.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/yafscii-yafscii.Tpo $(DEPDIR)/yafscii-yafscii.Po
#	$(AM_V_CC)source='yafscii.c' object='yafscii-yafscii.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(yafscii_CFLAGS) $(CFLAGS) -c -o yafscii-yafscii.obj `if test -f 'yafscii.c'; then $(CYGPATH_W) 'yafscii.c'; else $(CYGPATH_W) '$(srcdir)/yafscii.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-man1: $(man1_MANS)
	@$(NORMAL_INSTALL)
	@list1='$(man1_MANS)'; \
	list2=''; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list='$(man1_MANS)'; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(MANS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-man

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-man

uninstall-man: uninstall-man1

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-man1 install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-man uninstall-man1


.pod.1:
	$(POD2MAN) $(YAF_POD2MAN_ARGS) --section=1 $< $@

.pod.html:
	$(POD2HTML) --noindex --infile="$<" --outfile="$@"
	$(top_srcdir)/doc/add-header.pl "$@"

copy-man-pages: $(HTMLFILES)
	mkdir -p $(top_builddir)/doc/html
	cp $(HTMLFILES) $(top_builddir)/doc/html

docs: $(man1_MANS) copy-man-pages

clean-docs:
	rm -f $(man1_MANS) $(HTMLFILES)

clean-local:
	rm -f pod2htm*.tmp

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
